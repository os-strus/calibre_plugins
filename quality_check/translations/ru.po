# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Victor, 2022
# ashed <craysy@gmail.com>, 2024
# Caarmi, 2024
# 
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-08-05 20:03+1000\n"
"PO-Revision-Date: 2022-09-19 14:57+0000\n"
"Last-Translator: Caarmi, 2024\n"
"Language-Team: Russian (https://app.transifex.com/calibre/teams/19337/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ..\common\common_dialogs.py:84 config.py:337
msgid "Keyboard shortcuts"
msgstr "Сочетания клавиш..."

#: ..\common\common_dialogs.py:112
msgid "Restart calibre now"
msgstr "Перезагрузите calibre сейчас"

#: ..\common\common_dialogs.py:128
msgid "Preferences for:"
msgstr "Предпочтения для:"

#: ..\common\common_dialogs.py:160
msgid "Clear"
msgstr "Очистить"

#: ..\common\common_dialogs.py:162
msgid "Clear all settings for this plugin"
msgstr "Очистить все настройки для плагина"

#: ..\common\common_dialogs.py:189
msgid ""
"Are you sure you want to change your settings in this library for this "
"plugin?"
msgstr "Импорт списка"

#: ..\common\common_dialogs.py:190 ..\common\common_dialogs.py:210
msgid ""
"Any settings in other libraries or stored in a JSON file in your calibre "
"plugins folder will not be touched."
msgstr ""
"Любые настройки в других библиотеках или сохраненные в файле JSON в папке "
"плагинов calibre не будут затронуты."

#: ..\common\common_dialogs.py:192 ..\common\common_dialogs.py:212
msgid "You must restart calibre afterwards."
msgstr "Вы должны перезагрузить calibre впоследствии."

#: ..\common\common_dialogs.py:200
msgid "Settings changed"
msgstr "Настройки изменены"

#: ..\common\common_dialogs.py:201
msgid "Settings for this plugin in this library have been changed."
msgstr "Настройки этого плагина в этой библиотеке были изменены."

#: ..\common\common_dialogs.py:202 ..\common\common_dialogs.py:223
msgid "Please restart calibre now."
msgstr "Пожалуйста, перезагрузите calibre сейчас."

#: ..\common\common_dialogs.py:209
msgid ""
"Are you sure you want to clear your settings in this library for this "
"plugin?"
msgstr "Вы действительно хотите очистить настройки плагина в библиотеке?"

#: ..\common\common_dialogs.py:221
msgid "Settings deleted"
msgstr "Настройки удалены"

#: ..\common\common_dialogs.py:222
msgid "All settings for this plugin in this library have been cleared."
msgstr "Все настройки для этого плагина в этой библиотеке были очищены."

#: ..\common\common_dialogs.py:297
msgid "Copy to clipboard"
msgstr "Копировать в Буфер обмена"

#: ..\common\common_widgets.py:105
msgid "Undefined"
msgstr "Не определено"

#: ..\common\common_widgets.py:160
msgid "Restart required"
msgstr "Требуется перезапуск"

#: ..\common\common_widgets.py:161
msgid ""
"Title image not found - you must restart Calibre before using this plugin!"
msgstr ""
"Изображение обложки не найдено - перед использованием нужно перезапустить "
"calibre!"

#: ..\common\common_widgets.py:234
msgid "Create new column"
msgstr "Создать новый столбец"

#: action.py:38 check_base.py:62 check_covers.py:112 check_fix.py:374
msgid "Quality Check"
msgstr "Проверка качества"

#: action.py:108
msgid "Fix"
msgstr "Исправить"

#: action.py:114
msgid "Fix -> "
msgstr "Fix -> "

#: action.py:120
msgid "Repeat last check"
msgstr "Повторить последнюю проверку"

#: action.py:127
msgid "Search scope"
msgstr "Область поиска"

#: action.py:132
msgid "Library"
msgstr "Библиотека"

#: action.py:133
msgid ""
"Run check against entire library, unless a search restriction is applied"
msgstr ""
"Выполнить проверку всей библиотеки, если не применяется ограничение поиска"

#: action.py:134
msgid "Search Scope -> Library"
msgstr "Область поиска -> библиотека"

#: action.py:137
msgid "Selected book(s)"
msgstr "Выбранные книги"

#: action.py:138
msgid "Run check against selected book(s) only"
msgstr "Запустить проверку только для выбранных книг"

#: action.py:139
msgid "Search Scope -> Selection"
msgstr "Область поиска -> Выделение"

#: action.py:144
msgid "Exclude from check"
msgstr "Исключить из проверки"

#: action.py:145
msgid "Exclude selected book(s) from a particular Quality Check"
msgstr "Исключить выбранные книги из отдельной проверки качества"

#: action.py:148
msgid "View exclusions"
msgstr "Просмотр исключений"

#: action.py:149
msgid "View exclusions you have added for each Quality Check"
msgstr "Просмотр исключений, добавленных вами для каждой проверки качества"

#: action.py:154
msgid "&Customize plugin"
msgstr "&Настроить плагин"

#: action.py:156 config.py:347
msgid "&Help"
msgstr "Спр&авка"

#: check_base.py:57
msgid " (cancelled)"
msgstr " (прервано)"

#: check_base.py:63
msgid "%d matches found%s, see log for details"
msgstr "%dсовпадений найдено%s, подробности смотрите в журнале"

#: check_base.py:67
msgid "Checked %d books, found %d matches%s"
msgstr "Проверено %d книг, найдено %d совпадений%s"

#: check_base.py:70
msgid "No Matches"
msgstr "Нет совпадений"

#: check_covers.py:27 check_epub.py:185 check_fix.py:46 check_fix.py:171
#: check_metadata.py:67 check_mobi.py:38
msgid "Quality Check failed"
msgstr "Сбой проверки качества"

#: check_covers.py:28 check_epub.py:186 check_fix.py:47 check_metadata.py:68
#: check_mobi.py:39
msgid "Unknown menu key for %s of '%s'"
msgstr "Неизвестная клавиша меню для %s '%s'"

#: check_covers.py:63 check_covers.py:74 dialogs.py:79
msgid "less than"
msgstr "меньше"

#: check_covers.py:65 check_covers.py:79 dialogs.py:79
msgid "greater than"
msgstr "больше"

#: check_covers.py:71
msgid "Failed to identify cover:"
msgstr "Не удалось определить обложку:"

#: check_covers.py:84 dialogs.py:81
msgid "equal to"
msgstr "равно"

#: check_covers.py:93 dialogs.py:81
msgid "not equal to"
msgstr "не равно"

#: check_covers.py:104
msgid "books for covers"
msgstr "книги для обложек"

#: check_covers.py:106
msgid "Checked %d books, found %d cover matches%s"
msgstr "Проверено %d книг, найдено %d совпадений обложек%s"

#: check_covers.py:109
msgid "No matches found"
msgstr "Нет совпадений"

#: check_covers.py:109 check_metadata.py:172 check_metadata.py:205
#: check_metadata.py:267 check_metadata.py:330
msgid "No Matches%s"
msgstr "Нет совпадений%s"

#: check_covers.py:113
msgid "%d matches found, see log for errors%s"
msgstr "%dсовпадений найдено, ошибки - в журнале %s"

#: check_epub.py:113
msgid "iTunes files"
msgstr "Файлы iTunes"

#: check_epub.py:115
msgid "calibre bookmarks"
msgstr "Закладки calibre"

#: check_epub.py:117
msgid "OS artifacts"
msgstr "Артефакты ОС"

#: check_epub.py:275
msgid "Matches in book: <b>%s</b>"
msgstr "Совпадения в книге: <b>%s</b>"

#: check_epub.py:277
msgid "First match in book: <b>%s</b>"
msgstr "Первое совпадение в книге: <b>%s</b>"

#: check_epub.py:284 check_epub.py:316 check_epub.py:356
msgid "Invalid epub:"
msgstr "Неверный epub:"

#: check_epub.py:287 check_epub.py:319 check_epub.py:359 check_epub.py:559
msgid "ERROR parsing book: "
msgstr "ОШИБКА при анализе книги: "

#: check_epub.py:292
msgid "No searched ePub books have your search text"
msgstr "В найденных книгах ePub нет искомого текста"

#: check_epub.py:294
msgid "ePub books for search text"
msgstr "ePub книги для поиска текста"

#: check_epub.py:302 check_epub.py:342 check_epub.py:390 check_epub.py:667
#: check_epub.py:741
msgid "ERROR: EPUB format is missing: "
msgstr "ОШИБКА: отсутствует формат EPUB: "

#: check_epub.py:324
msgid "No searched ePub books have legacy jackets"
msgstr "В найденных книгах ePub нет устаревших обложек"

#: check_epub.py:327
msgid "No searched ePub books have jackets"
msgstr "Ни у одной искомой книги ePub нет обложек"

#: check_epub.py:330
msgid "All searched ePub books have jackets"
msgstr "Все искомые книги ePub имеют обложки"

#: check_epub.py:333
msgid "ePub books for jackets"
msgstr "Книги ePub для обложек"

#: check_epub.py:364
msgid "No searched ePub books have multiple jackets"
msgstr "Ни одна искомая книга ePub не имеет нескольких обложек"

#: check_epub.py:366
msgid "ePub books for multiple jackets"
msgstr "Книги ePub для нескольких обложек"

#: check_epub.py:422
msgid "No searched ePub books have non-zero .xpgt margins"
msgstr "Ни одна искомая книга ePub не имеет ненулевых полей .xpgt"

#: check_epub.py:424
msgid "ePub books for .xpgt margins"
msgstr "Книги ePub для полей .xpgt"

#: check_epub.py:454
msgid "Checking css import"
msgstr "Проверка импорта css"

#: check_epub.py:463
msgid "Checking html import"
msgstr "Проверка импорта html"

#: check_epub.py:477
msgid "No searched ePub books have inline xpgt links"
msgstr "Ни одна искомая книга ePub не имеет встроенных ссылок xpgt"

#: check_epub.py:479
msgid "ePub books for inline xpgt links"
msgstr "Книги ePub для встроенных ссылок xpgt"

#: check_epub.py:530
msgid "No searched ePub books have unmanifested files"
msgstr "Ни в одной искомой книге ePub нет непроявленных файлов"

#: check_epub.py:532
msgid "ePub books for unmanifested files"
msgstr "Книги ePub с файлами вне манифеста"

#: check_epub.py:547 check_epub.py:673 check_epub.py:747
msgid "SKIPPING BOOK (DRM Encrypted): "
msgstr "ПРОПУСК КНИГИ (зашифровано DRM): "

#: check_epub.py:560
msgid "\tIssue with CSS name: "
msgstr "\tПроблема с именем CSS: "

#: check_epub.py:584
msgid "\tUnused CSS file: %s"
msgstr "\tНеиспользуемый файл CSS: %s"

#: check_epub.py:597
msgid "No searched ePub books have unused CSS files"
msgstr "В найденных книгах ePub нет неиспользуемых файлов CSS."

#: check_epub.py:599
msgid "ePub books for unused CSS files"
msgstr "книги ePub для неиспользуемых файлов CSS"

#: check_epub.py:691
msgid "\tIssue with image name: "
msgstr "\tПроблема с именем изображения: "

#: check_epub.py:716
msgid "\tUNUSED image file: %s"
msgstr ""

#: check_epub.py:729
msgid "No searched ePub books have unused image files"
msgstr "В найденных книгах ePub нет неиспользуемых файлов изображений."

#: check_epub.py:731
msgid "ePub books for unused image files"
msgstr "книги ePub для неиспользуемых файлов изображений"

#: check_epub.py:786
msgid "\tBroken image link in:"
msgstr "\tБитая ссылка на изображение в:"

#: check_epub.py:786
msgid " of "
msgstr "из"

#: check_epub.py:798
msgid "No searched ePub books have broken image links"
msgstr "В найденных книгах ePub нет битых ссылок на изображения"

#: check_epub.py:800
msgid "ePub books for broken image links"
msgstr "книги ePub для битых ссылок на изображения"

#: check_epub.py:843
msgid "No searched ePub books have "
msgstr "Книги в формате ePub не найдены"

#: check_epub.py:845
msgid "ePub books for "
msgstr "ePub книги для"

#: check_epub.py:877
msgid "No OPF file in:"
msgstr "Нет файла OPF в:"

#: check_epub.py:882
msgid "No supported meta tag or non-xml cover in:"
msgstr "Нет поддерживаемых метатегов или non-xml обложек в:"

#: check_epub.py:887
msgid "DRM Encrypted cover in:"
msgstr "Зашифрованная обложка в:"

#: check_epub.py:892
msgid "Invalid cover image extension (%s) in:"
msgstr "Неверное расширение изображения обложки (%s) в:"

#: check_epub.py:905
msgid "No searched ePub books have replaceable covers"
msgstr "Нет найденных книг ePub со сменными обложками"

#: check_epub.py:908
msgid "All searched ePub books have replaceable covers"
msgstr "Все найденные книги ePub имеют сменные обложки"

#: check_epub.py:912
msgid "ePub books for replaceable covers"
msgstr "книги ePub со сменными обложками"

#: check_epub.py:948
msgid "No searched ePub books have calibre SVG covers embedded"
msgstr "В найденных книгах ePub нет встроенных calibre SVG обложек"

#: check_epub.py:951
msgid "All searched ePub books have calibre SVG covers embedded"
msgstr "Все найденные книги ePub имеют встроенные calibre SVG обложки"

#: check_epub.py:955
msgid "ePub books for calibre SVG covers"
msgstr "Книги ePub для calibre SVG обложек"

#: check_epub.py:992
msgid "No searched ePub books have calibre covers embedded"
msgstr "В найденных книгах ePub нет встроенных calibre обложек"

#: check_epub.py:995
msgid "All searched ePub books have calibre covers embedded"
msgstr "Все найденные книги ePub имеют встроенные calibre обложки"

#: check_epub.py:999
msgid "ePub books for calibre covers"
msgstr "книги ePub для calibre обложек"

#: check_epub.py:1028
msgid "No searched ePub books have been converted by calibre"
msgstr "Ни одна найденная книга ePub не была преобразована в calibre"

#: check_epub.py:1031
msgid "All searched ePub books have been converted by calibre"
msgstr "Все найденные книги ePub были конвертированы calibre"

#: check_epub.py:1035
msgid "ePub books for calibre conversions"
msgstr "Книги ePub для конвертации в calibre"

#: check_epub.py:1063
msgid "All searched ePub books have a valid zip format"
msgstr ""

#: check_epub.py:1065
msgid "ePub books for corrupted zip format"
msgstr ""

#: check_epub.py:1090
msgid "All searched ePub books have a valid container.xml file"
msgstr "Все найденные книги ePub имеют действительный файл container.xml."

#: check_epub.py:1092
msgid "ePub books for missing container.xml"
msgstr "Книги ePub для отсутствующего container.xml"

#: check_epub.py:1108
msgid "\tMissing container.xml file in"
msgstr "\tОтсутствует файл container.xml в"

#: check_epub.py:1113
msgid "\tIncorrect container.xml namespace in"
msgstr "\tНеверное пространство имен container.xml в"

#: check_epub.py:1120
msgid "\tIncorrect .opf manifest namespace in"
msgstr "\tНеверное пространство имен манифеста .opf в"

#: check_epub.py:1130
msgid "All searched ePub books have valid namespaces"
msgstr "Все найденные книги ePub имеют действительные пространства имен."

#: check_epub.py:1132
msgid "ePub books for namespaces check"
msgstr "книги ePub для проверки пространств имен"

#: check_epub.py:1169
msgid "All searched ePub books have only dc: elements in manifest"
msgstr "Все искомые книги ePub содержат только элементы dc: в манифесте"

#: check_epub.py:1171
msgid "ePub books for non dc: metadata check"
msgstr "Книги ePub для не dc: проверка метаданных"

#: check_epub.py:1193
msgid "Manifest file missing from: <b>%s</b>"
msgstr "Отсутствует файл манифеста: <b>%s</b>"

#: check_epub.py:1207
msgid "All searched ePub books have a valid opf manifest"
msgstr "Все найденные книги ePub имеют действительный манифест opf"

#: check_epub.py:1209
msgid "ePub books for missing files in opf"
msgstr "книги ePub для отсутствующих файлов в opf"

#: check_epub.py:1234 check_epub.py:1273
msgid "Ignoring DRM protected ePub: "
msgstr "Игнорирование защищенных DRM ePub:"

#: check_epub.py:1247
msgid "All searched ePub books have a flattened NCX TOC"
msgstr "Все найденные книги ePub имеют уплощённое оглавление NCX."

#: check_epub.py:1249
msgid "ePub books for NCX TOC hierarchy"
msgstr "Книги ePub для иерархии NCX TOC"

#: check_epub.py:1293
msgid "All searched ePub books have a NCX TOC with at least 3 items"
msgstr ""
"Все найденные книги ePub имеют оглавление NCX, содержащее не менее 3 "
"элементов"

#: check_epub.py:1295
msgid "ePub books for NCX TOC count"
msgstr "Книги ePub для подсчета NCX TOC"

#: check_epub.py:1350
msgid "All searched ePub books have a NCX TOC with valid links"
msgstr ""
"Все найденные книги ePub имеют оглавление NCX с действительными ссылками."

#: check_epub.py:1352
msgid "ePub books for broken NCX TOC links"
msgstr "Книги ePub для неработающих ссылок NCX TOC"

#: check_epub.py:1395
msgid "All searched ePub books have valid guide entries"
msgstr "Во всех найденных книгах ePub есть действительные путеводные записи"

#: check_epub.py:1397
msgid "ePub books for broken guide links"
msgstr "ePub-книги для битых путеводных ссылок"

#: check_epub.py:1431
msgid "No searched ePub books have oversize html files"
msgstr "В найденных книгах ePub нет html-файлов слишком большого размера"

#: check_epub.py:1433
msgid "ePub books for oversize html files"
msgstr "ePub-книги для больших html-файлов"

#: check_epub.py:1458
msgid "No searched ePub books have DRM"
msgstr "В найденных книгах ePub нет DRM"

#: check_epub.py:1460
msgid "ePub books for DRM"
msgstr "ePub книги для DRM"

#: check_epub.py:1492
msgid "No searched ePub books have Adobe DRM meta tags"
msgstr "В найденных книгах ePub нет метатегов Adobe DRM"

#: check_epub.py:1494
msgid "ePub books for Adobe DRM meta tags"
msgstr "Книги ePub для метатегов Adobe DRM"

#: check_epub.py:1526
msgid "No searched ePub books have \\<address\\> smart tags"
msgstr "В найденных книгах ePub нет смарт-тегов \\<address\\>"

#: check_epub.py:1528
msgid "ePub books for <address> smart tags"
msgstr "книги ePub для <address> смарт-тегов"

#: check_epub.py:1547
msgid "Font found in: <b>%s</b>"
msgstr "Шрифт найден в: <b>%s</b>"

#: check_epub.py:1561
msgid "No searched ePub books have embedded fonts"
msgstr "В найденных книгах ePub нет встроенных шрифтов"

#: check_epub.py:1563
msgid "ePub books for embedded fonts"
msgstr "книги ePub для встроенных шрифтов"

#: check_epub.py:1581
msgid "CSS file contains @font-face: <b>%s</b>"
msgstr "Файл CSS содержащий @font-face: <b>%s</b>"

#: check_epub.py:1587
msgid "At least one html file contains @font-face: <b>%s</b>"
msgstr "Как минимум один html-файл содержит @font-face: <b>%s</b>"

#: check_epub.py:1601
msgid "No searched ePub books have @font-face declarations"
msgstr "В найденных книгах ePub нет объявления @font-face"

#: check_epub.py:1603
msgid "ePub books for @font-face declarations"
msgstr "Книги ePub для объявлений @font-face"

#: check_epub.py:1632
msgid "All searched ePub books have text-align:justify"
msgstr "Все найденные книги ePub имеют text-align:justify"

#: check_epub.py:1634
msgid "ePub books for text-align:justify"
msgstr "книги ePub для text-align:justify"

#: check_epub.py:1660
msgid "\t\t'margin' property found, so does not match calibre preferences"
msgstr "\t\tсвойство 'margin' найдено, что не соответствует настройкам calibre"

#: check_epub.py:1663
msgid "\t\tNegative margin found, so does not match calibre preferences"
msgstr ""
"\t\tНайдена отрицательная граница, что не соответствует предпочтениям "
"calibre"

#: check_epub.py:1672
msgid "\t\tMargins is not defined in pts so does not match calibre preferences"
msgstr ""
"\t\tГраницы  не определены в пунктах, что не соответствует предпочтениям "
"calibre"

#: check_epub.py:1680 check_epub.py:1683 check_epub.py:1689
msgid "\t\tMargins are defined in pts but don't match calibre preferences"
msgstr ""
"\t\tГраницы определены в пунктах, но не соответствуют предпочтениям calibre"

#: check_epub.py:1692
msgid "\t\tMargins match calibre preferences"
msgstr "\t\tГраницы соответствуют предпочтениям calibre"

#: check_epub.py:1718
msgid "\tAnalyzing margins in "
msgstr "\tАнализ полей в "

#: check_epub.py:1748
msgid "All searched ePub books match the calibre page setup preferences"
msgstr ""
"Все найденные книги ePub соответствуют предпочтениям установки страницы "
"calibre"

#: check_epub.py:1750
msgid "ePub books for body or @page css margins"
msgstr "Книги в формате ePub для тела или css границ страницы @page"

#: check_epub.py:1788
msgid "All searched ePub books have book level margins defined"
msgstr "У всех найденных книг ePub определены поля на уровне книги"

#: check_epub.py:1790
msgid "ePub books lacking body or @page css margins"
msgstr "В книгах ePub отсутствуют body или css поля @page"

#: check_epub.py:1826
msgid "No searched ePub books inline @page margins"
msgstr "Не найдены в ePub книгах инлайновые поля @page"

#: check_epub.py:1828
msgid "ePub books using inline @page or body css margins"
msgstr "ePub книги использующие инлайновые @page или body css поля"

#: check_epub.py:1849
msgid "\tContains .js file: %s"
msgstr "\tСодержит файл .js: %s"

#: check_epub.py:1855
msgid "\tContains inline javascript: %s"
msgstr "\tСодержит код javascript: %s"

#: check_epub.py:1857
msgid "ePub with Javascript: %s"
msgstr "ePub с Javascript: %s"

#: check_epub.py:1872
msgid "No searched ePub books have javascript"
msgstr "Не найдены ePub книги с javascript"

#: check_epub.py:1874
msgid "ePub books for javascript"
msgstr "ePub книги для javascript"

#: check_epub.py:1902
msgid "Unsmartened punctuation in: <b>%s</b>"
msgstr "Необработанная пунктуация в: <b>%s</b>"

#: check_epub.py:1916
msgid "No searched ePub books need punctuation smartened"
msgstr "Искомые ePub книги не нуждаются в исправлении пунктуации"

#: check_epub.py:1918
msgid "ePub books for smarten punctuation"
msgstr "ePub книги для улучшения пунктуации"

#: check_epub.py:1936
msgid "Could not find OPF in:%s"
msgstr "Не найден OPF в:%s"

#: check_epub.py:1939
msgid "OPF file in container.xml not found in:%s"
msgstr "OPF файл в container.xml не найден в:%s"

#: check_fix.py:108
msgid "Reformatting author initials for"
msgstr "Переформатирование инициалов автора для"

#: check_fix.py:113
msgid "Reformatted initials for %d of %d book authors"
msgstr "Переформатированные инициалы для %d из %d авторов книг"

#: check_fix.py:138
msgid "Renaming authors to ascii for"
msgstr "Переименование авторов в ascii для"

#: check_fix.py:143
msgid "Renamed to ascii %d of %d book authors"
msgstr "Переименовано в ascii %d из %d авторов книг"

#: check_fix.py:172
msgid "\"Check and repair book sizes\" requires calibre version 5.9 or higher."
msgstr ""
"\"Проверка и исправление размеров книг\" требует calibre версии 5.9 или "
"выше."

#: check_fix.py:177
msgid "books for invalid file sizes"
msgstr "книги для файлов недопустимого размера"

#: check_fix.py:178
msgid "Checked %d books, updated %d format sizes in %d books%s"
msgstr "Проверено %d книг, обновлено %d размеров формата в %d книгах %s"

#: check_fix.py:182
msgid "All book format sizes are correct"
msgstr "Все размеры книг верны"

#: check_fix.py:202
msgid "books with paths missing commas"
msgstr "книги с путями без запятых"

#: check_fix.py:203
msgid "Checked %d books, updated %d paths%s"
msgstr "Проверено %d книг, обновлено %d путей%s"

#: check_fix.py:207
msgid "All books have up to date paths"
msgstr "Все книги имеют актуальные пути"

#: check_fix.py:219
msgid "Choose directory to cleanup"
msgstr "Выберите каталог для очистки"

#: check_fix.py:224
msgid "Invalid Folder"
msgstr "Неверная папка"

#: check_fix.py:225
msgid "You should not run this feature against a Calibre library folder."
msgstr "Вы не должны запускать эту функцию для папки библиотеки Calibre."

#: check_fix.py:226
msgid ""
"If you do you will remove \"Empty book\" entries and corrupt your database."
msgstr ""
"Если вы это сделаете, вы удалите записи \"Пустая книга\" и повредите свою "
"базу данных."

#: check_fix.py:235
msgid "No files/folders were found to be deleted"
msgstr "Файлов/папок, подлежащих удалению, не найдено."

#: check_fix.py:241 check_fix.py:248
msgid "Cleanup completed"
msgstr "Очистка завершена"

#: check_fix.py:244
msgid "Deleted %d files/folders with %d errors. See details for more info."
msgstr ""
"Удалено %d файлы/папки с %d ошибками. См. подробности для дополнительной "
"информации."

#: check_fix.py:272
msgid "Removed folder: %s"
msgstr "Удалена папка: %s"

#: check_fix.py:276
msgid "ERROR removing folder: %s"
msgstr "ОШИБКА при удалении папки: %s"

#: check_fix.py:310
msgid "Removed file: %s"
msgstr "Удален файл: %s"

#: check_fix.py:314
msgid "ERROR removing file: %s"
msgstr "ОШИБКА при удалении файла: %s"

#: check_fix.py:323 check_fix.py:326 check_fix.py:329
msgid "identifier found"
msgstr "Найден идентификатор"

#: check_fix.py:332
msgid "No ASIN found, using uuid"
msgstr "Не найден ASIN, используется uuid"

#: check_fix.py:366
msgid "Fixing ASIN for %d books"
msgstr "Исправление ASIN в книгах: %d"

#: check_fix.py:372
msgid "Fix ASIN completed"
msgstr ""

#: check_fix.py:375
msgid "%d books updated, see log for details"
msgstr "%d книг обновлено, подробности смотрите в журнале"

#: check_metadata.py:93
msgid "All searched books have a valid Title Sort"
msgstr "Все найденные книги имеют действительную сортировку по названию"

#: check_metadata.py:95
msgid "books for invalid title sort"
msgstr "книги для недопустимой сортировки по названию"

#: check_metadata.py:111
msgid "All searched books have a valid Author Sort"
msgstr "Все найденные книги имеют допустимую сортировку по авторам"

#: check_metadata.py:113
msgid "books for invalid author sort"
msgstr "книги для недопустимой сортировки по автору"

#: check_metadata.py:126
msgid "All searched books have a valid ISBN"
msgstr "Все найденные книги имеют действительный ISBN"

#: check_metadata.py:128
msgid "books for invalid ISBN"
msgstr "книги с неверным ISBN"

#: check_metadata.py:141
msgid "All searched books have a valid pubdate"
msgstr "Все найденные книги имеют действительную дату публикации"

#: check_metadata.py:143
msgid "books for invalid pubdate"
msgstr "книги для недействительной даты публикации"

#: check_metadata.py:160
msgid "books for duplicate ISBN"
msgstr "книги для дубликатов ISBN"

#: check_metadata.py:173
msgid "All searched books have unique ISBNs"
msgstr "Все найденные книги имеют уникальный ISBN"

#: check_metadata.py:192
msgid "books for duplicate series"
msgstr "книги для дубликатов серий"

#: check_metadata.py:206
msgid "All searched books have unique series indexes"
msgstr "Все найденные книги имеют уникальные индексы серий"

#: check_metadata.py:264
msgid "Checked %d books, found %d gaps in %d series"
msgstr "Проверено %d книг, найдено %d пробелов в %s сериях"

#: check_metadata.py:268
msgid "No series gaps exist in the books searched"
msgstr "В искомых книгах нет пробелов в сериях"

#: check_metadata.py:270
msgid "Series Gaps Found%s"
msgstr "Обнаружены пробелы в серии %s"

#: check_metadata.py:294
msgid "books for series pubdate order"
msgstr "книги в порядке даты публикаций серий"

#: check_metadata.py:327
msgid "Checked %d books, found %d disordered in %d series"
msgstr "Проверено %d книг, найдено %d неупорядоченных в %d сериях"

#: check_metadata.py:331
msgid "No series pubdate disorders exist in the books searched"
msgstr "В искомых книгах нет неупорядоченности в датах публикаций серий"

#: check_metadata.py:333
msgid "Series Pubdate Issues Found"
msgstr "Обнаружены проблемы с датами публикаций серий"

#: check_metadata.py:351
msgid "All searched books have a valid tag count"
msgstr "Все найденные книги имеют допустимое количество тегов"

#: check_metadata.py:353
msgid "books for invalid tag count"
msgstr "книги для недопустимого количества тегов"

#: check_metadata.py:386
msgid "All searched books have no HTML in comments"
msgstr "Все найденные книги не содержат HTML в комментариях"

#: check_metadata.py:388
msgid "books for no HTML in comments"
msgstr "книги для отсутствия HTML в комментариях"

#: check_metadata.py:423
msgid "All searched books have HTML in comments"
msgstr "Все найденные книги содержат HTML в комментариях"

#: check_metadata.py:425
msgid "books for HTML in comments"
msgstr "книги для HTML в комментариях"

#: check_metadata.py:440
msgid "All searched book authors have no commas"
msgstr "Во всех найденных авторах книг нет запятых"

#: check_metadata.py:442
msgid "books with authors having commas"
msgstr "книги с авторами, имеющими запятые"

#: check_metadata.py:457
msgid "All searched book authors have commas"
msgstr "Во всех найденных авторах книг есть запятые"

#: check_metadata.py:459
msgid "books with authors not having commas"
msgstr "книги с авторами, не имеющими запятых"

#: check_metadata.py:474
msgid "All searched authors have a valid casing"
msgstr "Все искомые авторы имеют действительный регистр"

#: check_metadata.py:476
msgid "books for invalid author casing"
msgstr "книги для обложки с недействительным регистром автора"

#: check_metadata.py:494
msgid "All searched book authors have alphabetic names"
msgstr "Все искомые авторы книг имеют алфавитные имена"

#: check_metadata.py:496
msgid "books with authors having non-alphabetic names"
msgstr "книги с авторами, имеющими неалфавитные имена"

#: check_metadata.py:513
msgid "All searched book authors have ascii names"
msgstr "Все искомые авторы книг имеют имена ascii"

#: check_metadata.py:515
msgid "books with authors having non-ascii names"
msgstr "книги с авторами, имеющими имена, отличные от ascii"

#: check_metadata.py:533
msgid "All searched book authors have correct initials"
msgstr "Все авторы искомых книг имеют правильные инициалы"

#: check_metadata.py:535
msgid "books with authors having incorrect initials"
msgstr "книги с неправильными инициалами авторов"

#: check_metadata.py:548
msgid "All searched books do not have titles with series names"
msgstr "Все искомые книги не имеют названий с названиями серий"

#: check_metadata.py:550
msgid "book titles with possible series names"
msgstr "названия книг с возможными названиями серий"

#: check_metadata.py:562
msgid "All searched titles have a valid title casing"
msgstr "Все искомые заголовки имеют допустимый регистр заголовков"

#: check_metadata.py:564
msgid "books for invalid title casing"
msgstr "книги для недопустимого регистра заголовка"

#: check_mobi.py:80
msgid "All searched MOBI books have EBOK cdetag values"
msgstr "Все искомые книги MOBI имеют значения EBOK cdetag"

#: check_mobi.py:82
msgid "MOBI books missing EBOK cdetag"
msgstr "Книги MOBI с отсутствующим EBOK cdetag"

#: check_mobi.py:121
msgid "All searched MOBI books have ASIN values"
msgstr "Все искомые книги MOBI имеют значения ASIN"

#: check_mobi.py:123
msgid "MOBI books missing ASIN"
msgstr "В книгах MOBI отсутствует ASIN"

#: check_mobi.py:166
msgid "All searched MOBI books have Twitter/Facebook sharing enabled"
msgstr "Для всех искомых книг MOBI включено расшаривание в Twitter/Facebook."

#: check_mobi.py:168
msgid "MOBI books unable to share on Twitter/Facebook"
msgstr "Книги MOBI не могут быть расшарены в Twitter/Facebook"

#: check_mobi.py:197
msgid "All searched MOBI books have no clipping limits"
msgstr "Все искомые книги MOBI не имеют лимитов обрезки"

#: check_mobi.py:199
msgid "MOBI books for clipping limits"
msgstr "Книги MOBI для лимитов обрезки"

#: config.py:71
msgid "Check covers"
msgstr "Проверить обложки"

#: config.py:71
msgid "Find books with book covers matching your criteria"
msgstr "Найти книги с обложками, соответствующими вашим критериям"

#: config.py:73
msgid "Check for ePub formats which have any calibre jacket"
msgstr "Проверить форматы ePub с любой суперобложкой"

#: config.py:73
msgid "Check having any jacket"
msgstr "Проверить наличие суперобложки"

#: config.py:73 config.py:74 config.py:75 config.py:76 config.py:77
#: config.py:78 config.py:79 config.py:80 config.py:81 config.py:82
#: config.py:83 config.py:84 config.py:85 config.py:86 config.py:87
#: config.py:88 config.py:89 config.py:90 config.py:91 config.py:92
#: config.py:93 config.py:94 config.py:95 config.py:96 config.py:97
#: config.py:98 config.py:99 config.py:100 config.py:101 config.py:102
msgid "Check ePub Structure"
msgstr "Проверить структуру ePub"

#: config.py:74
msgid ""
"Check for ePub formats which have a calibre jacket from versions prior to "
"0.6.51"
msgstr "Проверить форматы ePub с суперобложкой из версий calibre до 0.6.51"

#: config.py:74
msgid "Check having legacy jacket"
msgstr "Проверить наличие унаследованной суперобложки"

#: config.py:75
msgid "Check for ePub formats which have multiple jackets"
msgstr "Проверить форматы ePub с множеством суперобложек"

#: config.py:75
msgid "Check having multiple jackets"
msgstr "Проверить наличие нескольких суперобложек"

#: config.py:76
msgid "Check for ePub formats which do not have a jacket"
msgstr "Проверить форматы ePub, у которых нет суперобложки"

#: config.py:76
msgid "Check missing jacket"
msgstr "Проверить отсутствующие суперобложки"

#: config.py:77
msgid ""
"Check for ePub formats with a missing container.xml indicating an invalid "
"ePub"
msgstr ""
"Проверить форматы ePub с отсутствующим файлом container.xml, указывающим на "
"недействительный ePub."

#: config.py:77
msgid "Check missing container.xml"
msgstr "Проверить отсутствующий файл container.xml"

#: config.py:78
msgid ""
"Check for ePub formats with invalid namespaces in the container xml or opf "
"manifest"
msgstr ""
"Проверить наличие форматов ePub с недопустимыми пространствами имен в XML-"
"файле контейнера или манифесте opf"

#: config.py:78
msgid "Check invalid namespaces"
msgstr "Проверить недопустимые пространства имен"

#: config.py:79
msgid ""
"Check for ePub formats with metadata elements in the opf manifest that are "
"not in the dc: namespace"
msgstr ""
"Проверить наличие форматов ePub с элементами метаданных в манифесте opf, "
"которые не входят в пространство имен dc:"

#: config.py:79
msgid "Check non-dc: metadata"
msgstr "Проверить non-dc: метаданные"

#: config.py:80
msgid ""
"Check for ePub formats with files missing that are listed in their opf "
"manifest"
msgstr ""
"Проверить форматы ePub с отсутствующими файлами, перечисленными в их "
"манифесте opf"

#: config.py:80
msgid "Check manifest files missing"
msgstr "Проверить отсутствие файлов манифеста"

#: config.py:81
msgid ""
"Check for ePub formats with files that are not listed in their opf manifest "
"excluding iTunes/bookmarks"
msgstr ""
"Проверить форматы ePub с файлами, которые не указаны в их манифесте opf, за "
"исключением iTunes/закладок."

#: config.py:81
msgid "Check unmanifested files"
msgstr " Проверить файлы без манифеста"

#: config.py:82
msgid ""
"Check for ePub formats with CSS files that are not referenced from any html "
"pages"
msgstr ""
"Проверить форматы ePub с файлами CSS, на которые нет ссылок ни на каких "
"html-страницах"

#: config.py:82
msgid "Check unused CSS files"
msgstr "Проверить неиспользуемые файлы CSS"

#: config.py:83
msgid ""
"Check for ePub formats with image files that are not referenced from the "
"xhtml pages"
msgstr ""
"Проверить форматы ePub с файлами изображений, на которые нет ссылок на "
"страницах xhtml"

#: config.py:83
msgid "Check unused image files"
msgstr "Проверить неиспользуемые файлы изображений"

#: config.py:84
msgid "Check broken image links"
msgstr "Проверить неработающие ссылки на изображения"

#: config.py:84
msgid ""
"Check for ePub formats with html pages that contain broken links to images"
msgstr ""
"Проверить форматы ePub с html-страницами, содержащими неработающие ссылки на"
" изображения"

#: config.py:85
msgid ""
"Check for ePub formats with an iTunesMetadata.plist or iTunesArtwork file"
msgstr ""
"Проверить форматы ePub с помощью файла iTunesMetadata.plist или "
"iTunesArtwork"

#: config.py:85
msgid "Check iTunes files"
msgstr "Проверить файлы iTunes"

#: config.py:86
msgid "Check calibre bookmark files"
msgstr "Проверить файлы закладок calibre"

#: config.py:86
msgid "Check for ePub formats with a calibre bookmarks file"
msgstr "Проверить форматы ePub с помощью файла закладок calibre"

#: config.py:87
msgid "Check OS artifacts"
msgstr "Проверить артефакты ОС"

#: config.py:87
msgid "Check for ePub formats with OS artifacts of .DS_Store or Thumbs.db"
msgstr "Проверить форматы ePub с артефактами ОС .DS_Store или Thumbs.db"

#: config.py:88
msgid "Check ePub inside ePub"
msgstr "Проверить ePub внутри ePub"

#: config.py:88
msgid "Check for ePub formats containing a ePub inside"
msgstr "Проверьте форматы ePub, содержащие ePub внутри"

#: config.py:89
msgid "Check NCX TOC hierarchical"
msgstr "Проверить иерархию NCX TOC"

#: config.py:89
msgid ""
"Check for ePub formats with a NCX file TOC which is not flat (i.e. "
"hierarchical)"
msgstr ""
"Проверить форматы ePub с иерархическим (не-плоским) оглавлением файла NCX"

#: config.py:90
msgid "Check NCX TOC with < 3 entries"
msgstr "Проверить NCX TOC с менее чем 3 записями"

#: config.py:90
msgid "Check for ePub formats with a NCX file TOC with less than 3 entries"
msgstr "Проверить ePub форматы с NCX TOC с менее чем 3 записями"

#: config.py:91
msgid "Check NCX TOC with broken links"
msgstr "Проверить NCX TOC с неработающими ссылками"

#: config.py:91
msgid ""
"Check for ePub formats with a NCX file TOC that contains broken html links"
msgstr ""
"Проверить форматы ePub с оглавлением файла NCX, которое содержит "
"неработающие html-ссылки"

#: config.py:92
msgid "Check <guide> broken links"
msgstr "Проверить <guide> неработающие ссылки"

#: config.py:92
msgid ""
"Check for ePub formats with broken links in the <guide> section of the "
"manifest"
msgstr ""
"Проверить форматы ePub с неработающими ссылками в <guide>разделе манифеста"

#: config.py:93
msgid ""
"Check for ePub formats with an individual html file size that requires "
"splitting on some devices"
msgstr ""
"Проверить форматы ePub с индивидуальным размером HTML-файла, нуждающемся в "
"разделении на некоторых устройствах"

#: config.py:93
msgid "Check oversize html files"
msgstr "Проверить негабаритные html-файлы"

#: config.py:94
msgid "Check DRM"
msgstr "Проверка DRM"

#: config.py:94
msgid "Check for ePub formats with DRM encryption xml files"
msgstr "Проверить форматы ePub с XML-файлами с шифрованием DRM"

#: config.py:95
msgid "Check Adobe DRM meta tag"
msgstr "Проверить метатег Adobe DRM"

#: config.py:95
msgid ""
"Check for ePub formats that contain html pages with an Adobe DRM meta "
"identifier tag"
msgstr ""
"Проверить форматы ePub, содержащие HTML-страницы с метатегом идентификатора "
"Adobe DRM"

#: config.py:96
msgid ""
"Check for ePub formats with a cover that can be replaced when exporting or "
"updating metadata with Modify ePub"
msgstr ""
"Проверить форматы ePub с обложкой, заменяемой при экспорте или обновлении "
"метаданных с помощью Modify ePub"

#: config.py:96
msgid "Check replaceable cover"
msgstr "Проверить сменную обложку"

#: config.py:97
msgid ""
"Check for ePub formats with no cover or a cover that cannot be replaced "
"without a calibre conversion"
msgstr ""
"Проверить форматы ePub без обложки или не заменяемой без calibre конвертации"
" обложки"

#: config.py:97
msgid "Check non-replaceable cover"
msgstr "Проверить не заменяемую обложку"

#: config.py:98
msgid "Check calibre SVG cover"
msgstr "Проверить calibre SVG обложку"

#: config.py:98
msgid ""
"Check for ePub formats with a cover that has been inserted by a calibre "
"conversion or Modify ePub and that is SVG"
msgstr ""
"Проверить наличие форматов ePub с SVG обложкой, вставленной calibre "
"конвертацией или модификацией ePub"

#: config.py:99
msgid ""
"Check for ePub formats that have no calibre cover inserted by a calibre "
"conversion or Modify ePub that is SVG"
msgstr ""
"Проверить наличие форматов ePub без SVG обложки, вставленной calibre "
"конвертацией или модификацией ePub"

#: config.py:99
msgid "Check no calibre SVG cover"
msgstr "Проверить отсутствие calibre SVG обложки"

#: config.py:100
msgid "Check calibre conversion"
msgstr "Проверить calibre конвертацию"

#: config.py:100
msgid "Check for ePub formats that have been converted by calibre"
msgstr "Проверить форматы ePub, конвертированные calibre"

#: config.py:101
msgid "Check for ePub formats that have not been converted by calibre"
msgstr "Проверить форматы ePub, не конвертированные calibre"

#: config.py:101
msgid "Check not calibre conversion"
msgstr "Проверить отсутствие calibre конвертации"

#: config.py:102
msgid "Check corrupt zip"
msgstr ""

#: config.py:102
msgid "Check for ePub zip that is corrupted, may need conversion to fix"
msgstr ""

#: config.py:104
msgid "Check <address> smart-tags"
msgstr "Проверка смарт-тегов <address>"

#: config.py:104
msgid ""
"Check for ePub formats that have <address> elements from a poor conversion "
"with Word smart tags"
msgstr ""
"Проверить наличие форматов ePub с <address> элементами плохой конвертации "
"смарт-тегов Word"

#: config.py:104 config.py:105 config.py:106 config.py:107 config.py:108
#: config.py:109 config.py:110 config.py:111 config.py:112 config.py:113
#: config.py:114
msgid "Check ePub Style"
msgstr "Проверка стилей ePub"

#: config.py:105
msgid "Check embedded fonts"
msgstr "Проверка внедренных шрифтов"

#: config.py:105
msgid "Check for ePub formats with embedded fonts"
msgstr "Проверить форматы ePub с внедрёнными шрифтами"

#: config.py:106
msgid "Check @font-face"
msgstr "Проверка @font-face"

#: config.py:106
msgid ""
"Check for ePub formats with CSS or html files that contain @font-face "
"declarations"
msgstr ""
"Проверить форматы ePub с файлами CSS или html, содержащими объявления @font-"
"face"

#: config.py:107
msgid "Check Adobe .xpgt margins"
msgstr "Проверить поля Adobe .xpgt"

#: config.py:107
msgid "Check for ePub formats with an xpgt file with non-zero margins"
msgstr "Проверить форматы ePub с файлом xpgt с ненулевыми полями"

#: config.py:108
msgid "Check Adobe inline .xpgt links"
msgstr "Проверить инлайновые Adobe .xpgt ссылки"

#: config.py:108
msgid ""
"Check for ePub formats that contain html pages with links to an xpgt file"
msgstr ""
"Проверить форматы ePub, содержащие html-страницы со ссылками на файл xpgt"

#: config.py:109
msgid "Check CSS non-justified"
msgstr "Проверить CSS без выравнивания"

#: config.py:109
msgid ""
"Check for ePub formats with CSS files that do not contain a text-align: "
"justify style"
msgstr ""
"Проверить форматы ePub с файлами CSS, не содержащими стиль text-align: "
"justify"

#: config.py:110
msgid "Check CSS book margins"
msgstr "Проверить CSS поля книги"

#: config.py:110
msgid ""
"Check for ePub formats with book level CSS margins conflicting with calibre "
"Preferences"
msgstr ""
"Проверить форматы ePub с полями CSS на уровне книги, конфликтующими с "
"настройками calibre"

#: config.py:111
msgid "Check CSS no book margins"
msgstr "Проверить CSS без полей книги"

#: config.py:111
msgid "Check for ePub formats that do not contain CSS book level margins"
msgstr "Проверить форматы ePub с файлами CSS без полей книги"

#: config.py:112
msgid "Check for ePub formats that contain @page CSS margins in each flow"
msgstr ""
"Проверить форматы ePub с файлами содержащие поля @page CSS в каждом потоке"

#: config.py:112
msgid "Check inline @page margins"
msgstr "Проверить инлайновые @page поля"

#: config.py:113
msgid "Check for ePub formats that contain inline javascript <script> blocks"
msgstr ""
"Проверить форматы ePub, содержащие встроенные javascript <script> блоки "

#: config.py:113
msgid "Check javascript <script>"
msgstr "Проверка сценариев javascript <script>"

#: config.py:114
msgid "Check for ePub formats that contain unsmartened punctuation"
msgstr "Проверить форматы ePub, содержащие неумную пунктуацию"

#: config.py:114
msgid "Check smarten punctuation"
msgstr "Проверить умную пунктуацию"

#: config.py:116
msgid ""
"Check for MOBI/AZW/AZW3 formats missing the cdetype of EBOK required for a "
"Kindle Fire"
msgstr ""
"Проверить форматы MOBI/AZW/AZW3, у которых отсутствует cdetype EBOK, "
"необходимый для Kindle Fire"

#: config.py:116
msgid "Check missing EBOK cdetype"
msgstr "Проверить отсутствующий EBOK cdetype"

#: config.py:116 config.py:117 config.py:118 config.py:119
msgid "Check Mobi"
msgstr "Проверка Mobi"

#: config.py:117
msgid ""
"Check for MOBI/AZW/AZW3 formats missing an ASIN in EXTH 113 required for "
"reading on a Kindle Fire"
msgstr ""
"Поиск форматов MOBI/AZW/AZW3, у которых отсутствует ASIN в EXTH 113, что "
"необходимо для Kindle Fire"

#: config.py:117
msgid "Check missing ASIN identifier"
msgstr "Проверка отсутствия идентификатора ASIN"

#: config.py:118
msgid "Check Twitter/Facebook disabled"
msgstr "Проверка доступа к Twitter/Facebook"

#: config.py:118
msgid ""
"Check for MOBI/AZW/AZW3 formats missing an ASIN in both EXTH 113 and EXTH "
"504 to enable \"share\" features on Facebook or Twitter"
msgstr ""
"Проверить форматы MOBI/AZW/AZW3, с отсутствующим ASIN в EXTH 113 и EXTH 504 "
"(функция \"поделиться\" в Facebook или Twitter)"

#: config.py:119
msgid "Check clipping limit"
msgstr "Проверить лимиты обрезки"

#: config.py:119
msgid ""
"Check for MOBI/AZW/AZW3 formats that have a clipping limit specified by the "
"publisher in EXTH header 401"
msgstr ""
"Проверить форматы MOBI/AZW/AZW3 с лимитом обрезки, указанным издателем в "
"заголовке EXTH 401"

#: config.py:121
msgid "Check title sort"
msgstr "Проверка сортировки по заголовку"

#: config.py:121
msgid "Find books with an invalid title sort value"
msgstr "Найти книги с недопустимым значением сортировки по названию"

#: config.py:121 config.py:122 config.py:123 config.py:124 config.py:125
#: config.py:126 config.py:127 config.py:128 config.py:129 config.py:130
#: config.py:131 config.py:132 config.py:133 config.py:134 config.py:135
#: config.py:136 config.py:137 config.py:138 config.py:139
msgid "Check metadata"
msgstr "Проверка метаданных"

#: config.py:122
msgid "Check author sort"
msgstr "Проверка сортировки по автору"

#: config.py:122
msgid "Find books with an invalid author sort value"
msgstr "Найти книги с недопустимым значением сортировки по автору"

#: config.py:123
msgid "Check ISBN"
msgstr "Проверка ISBN"

#: config.py:123
msgid "Find books with an invalid ISBN"
msgstr "Найти книги с неверным ISBN"

#: config.py:124
msgid "Check pubdate"
msgstr "Проверка даты публикации"

#: config.py:124
msgid ""
"Find books with an invalid pubdate where it is set to the timestamp date"
msgstr ""
"Найти книги с недействительной датой публикации, установленной ​​на дату "
"метки времени"

#: config.py:125
msgid "Check duplicate ISBN"
msgstr "Проверка повторяющихся ISBN"

#: config.py:125
msgid "Find books that have duplicate ISBN values"
msgstr "Поиск книг с повторяющимися значениями ISBN"

#: config.py:126
msgid "Check duplicate series"
msgstr "Проверка повторов в сериях"

#: config.py:126
msgid "Find books that have duplicate series values"
msgstr "Поиск книг с повторяющимися значениями серий"

#: config.py:127
msgid "Check series gaps"
msgstr "Проверить пропуски в сериях"

#: config.py:127 config.py:128
msgid "Find books that have gaps in their series index values"
msgstr "Поиск книг с разрывами в значениях индекса серии"

#: config.py:128
msgid "Check series pubdate order"
msgstr "Проверить порядок дат публикации серии"

#: config.py:129
msgid "Check excess tags"
msgstr "Проверка избыточных тегов"

#: config.py:129
msgid "Find books with an excess number of tags"
msgstr "Найти книги с избыточным количеством тегов"

#: config.py:130
msgid "Check html comments"
msgstr "Проверка комментариев html"

#: config.py:130
msgid "Find books which have comments html with style formatting embedded"
msgstr ""
"Найти книги, в которых есть комментарии html со внедрённым форматированием "
"стилей"

#: config.py:131
msgid "Check no html comments"
msgstr "Проверить отсутствие комментариев html"

#: config.py:131
msgid "Find books which have comments with no html tags at all"
msgstr "Найти книги, в которых есть комментарии без html-тегов"

#: config.py:132
msgid "Check authors with commas"
msgstr "Проверка авторов с запятыми"

#: config.py:132
msgid "Find authors with commas in their name"
msgstr "Поиск авторов с запятыми в имени"

#: config.py:133
msgid "Check authors missing commas"
msgstr "Проверка авторов без запятых"

#: config.py:133
msgid "Find authors with no commas in their name"
msgstr "Поиск авторов без запятых в имени"

#: config.py:134
msgid "Check authors for case"
msgstr "Проверить авторов на регистр"

#: config.py:134
msgid "Find authors which are all uppercase or all lowercase"
msgstr "Найти авторов, написанных только прописными или строчными буквами"

#: config.py:135
msgid "Check authors non alphabetic"
msgstr "Проверить небуквенных авторов"

#: config.py:135
msgid ""
"Find authors with non-alphabetic characters such as semi-colons indicating "
"cruft or incorrect separators"
msgstr ""
"Найти авторов с неалфавитными символами, такими как точка с запятой "
"(указывает на бесполезные или неправильные разделители)"

#: config.py:136
msgid "Check authors non ascii"
msgstr "Проверить авторов не ascii"

#: config.py:136
msgid "Find authors with non-ascii names (e.g. with diacritics)"
msgstr "Найти авторов с не ascii именами (напр. диакритика)"

#: config.py:137
msgid "Check authors initials"
msgstr "Проверка инициалов автора"

#: config.py:137
msgid ""
"Find authors with initials that do not meet your preferred configuration"
msgstr ""
"Найти авторов с инициалами, которые не соответствуют вашей предпочтительной "
"конфигурации"

#: config.py:138
msgid "Check titles with series"
msgstr "Проверка названий с серией"

#: config.py:138
msgid "Find titles with possible series info in their name"
msgstr "Найти заголовки с возможной информацией о серии в их названии"

#: config.py:139
msgid "Check titles for title case"
msgstr "Проверить названия на регистр ЗАГОЛОВКОВ"

#: config.py:139
msgid "Find titles which are candidates to apply the titlecase function to"
msgstr "Найти заголовки, к которым можно применить функцию titlecase"

#: config.py:141
msgid "Check missing title"
msgstr "Проверка отсутствия названия"

#: config.py:141
msgid "Find books missing a title"
msgstr "Найти книги без названия"

#: config.py:141 config.py:142 config.py:143 config.py:144 config.py:145
#: config.py:146 config.py:147 config.py:148 config.py:149 config.py:150
#: config.py:151
msgid "Check missing"
msgstr "Проверки отсутствия"

#: config.py:142
msgid "Check missing author"
msgstr "Проверка отсутствия автора"

#: config.py:142
msgid "Find books missing authors"
msgstr "Найти книги с отсутствующими авторами"

#: config.py:143
msgid "Check missing ISBN"
msgstr "Проверка отсутствия ISBN"

#: config.py:143
msgid "Find books missing an ISBN identifier"
msgstr "Найти книги с отсутствующим ISBN идентификатором"

#: config.py:144
msgid "Check missing pubdate"
msgstr "Проверить отсутствующую дату публикации"

#: config.py:144
msgid "Find books missing published date"
msgstr "Найти книги с отсутствующей датой публикации"

#: config.py:145
msgid "Check missing publisher"
msgstr "Проверить отсутствующего издателя"

#: config.py:145
msgid "Find books missing publisher"
msgstr "Найти книги с отсутствующим издателем"

#: config.py:146
msgid "Check missing tags"
msgstr "Проверить отсутствующие теги"

#: config.py:146
msgid "Find books missing tags"
msgstr "Найти книги с отсутствующими тегами"

#: config.py:147
msgid "Check missing rating"
msgstr "Проверить отсутствующий рейтинг"

#: config.py:147
msgid "Find books missing rating"
msgstr "Найти книги с отсутствующим рейтингом"

#: config.py:148
msgid "Check missing comments"
msgstr "Проверить отсутствующие комментарии"

#: config.py:148
msgid "Find books missing comments"
msgstr "Найти книги с отсутствующими комментариями"

#: config.py:149
msgid "Check missing languages"
msgstr "Проверка отсутствия языков"

#: config.py:149
msgid "Find books missing languages"
msgstr "Найти книги с отсутствующим языком"

#: config.py:150
msgid "Check missing cover"
msgstr "Проверить отсутствующую обложку"

#: config.py:150
msgid "Find books missing a cover"
msgstr "Найти книги без обложки"

#: config.py:151
msgid "Check missing formats"
msgstr "Проверить отсутствующие форматы"

#: config.py:151
msgid "Find books missing formats"
msgstr "Найти книги с отсутствующими форматами"

#: config.py:153
msgid "Find ePub books with text matching your own regular expression"
msgstr ""
"Найти книги ePub с текстом, соответствующим вашему собственному регулярному "
"выражению"

#: config.py:153 dialogs.py:499
msgid "Search ePubs"
msgstr "Поиск ePub"

#: config.py:158
msgid ""
"For the selected book(s) swap author names between FN LN and LN, FN formats"
msgstr ""
"Для выбранных книг поменять местами выбранные имена авторов с Имя Фамилия на"
" Фамилия, Имя"

#: config.py:158
msgid "Swap author FN LN <-> LN,FN"
msgstr "Поменять Имя Фамилия <-> Фамилия, Имя"

#: config.py:159
msgid ""
"For the selected book(s) reformat the author initials to your configured "
"preference"
msgstr ""
"Для выбранных книг переформатировать инициалы автора в соответствии с вашими"
" настройками"

#: config.py:159
msgid "Reformat author initials"
msgstr "Переформатировать инициалы автора"

#: config.py:160
msgid ""
"For the selected book(s) rename the title to remove any accents and "
"diacritics characters"
msgstr ""
"Для выбранных книг переименовать название, удалив любые акценты и "
"диакритические знаки"

#: config.py:160
msgid "Rename author to ascii"
msgstr "Переименовать автора в ascii"

#: config.py:161
msgid "Check and repair book sizes"
msgstr "Проверить и исправить размеры книг"

#: config.py:161
msgid "Check and update file sizes for your books"
msgstr "Проверить и обновить размеры файлов книг"

#: config.py:162
msgid "Check and rename book paths"
msgstr "Проверить и переименовать пути к книгам"

#: config.py:162
msgid "Ensure book paths include commas if appropriate"
msgstr "Убедитесь, что пути к книгам включают запятые, если это необходимо"

#: config.py:163
msgid "Cleanup .opf files/folders"
msgstr "Очистка файлов и папок .opf"

#: config.py:163
msgid "Delete orphaned opf/jpg files and remove empty folders"
msgstr "Удалить потерянные файлы opf/jpg и удалить пустые папки"

#: config.py:164
msgid "Fix ASIN for Kindle Fire"
msgstr "Исправить ASIN для Kindle Fire"

#: config.py:164
msgid ""
"For MOBI/AZW/AZW3 formats, assign the current amazon identifier (uuid if not"
" present) as an ASIN to EXTH 113 and 504 fields"
msgstr ""
"Для форматов MOBI/AZW/AZW3 назначить текущий идентификатор amazon (uuid, при"
" отсутствии) в качестве ASIN для полей EXTH 113 и 504"

#: config.py:285
msgid "Check excess tags options"
msgstr "Проверить параметры излишних тегов"

#: config.py:290
msgid "Maximum tags:"
msgstr "Макс. кол-во тегов:"

#: config.py:291
msgid "Books with more than this value will be displayed"
msgstr "Книги с более чем этим значением будут отображаться"

#: config.py:299
msgid "Exclude tags:"
msgstr "Исключить теги:"

#: config.py:300
msgid "Exclude these tags from when counting the tags for each book"
msgstr "Исключить эти теги при подсчете тегов для каждой книги"

#: config.py:309
msgid "Other options"
msgstr "Прочие параметры"

#: config.py:314
msgid "Author initials format:"
msgstr "Формат инициалов автора:"

#: config.py:315
msgid ""
"For use with the \"Check Author initials\" option, set your preferred format"
msgstr ""
"Для использования с параметром \"Проверить инициалы автора\" установите "
"предпочтительный формат"

#: config.py:322
msgid "Suppress Fix summary dialogs"
msgstr ""

#: config.py:323
msgid ""
"Uncheck this option if you do not want interactive dialogs to appear "
"summarising the operation"
msgstr ""

#: config.py:329
msgid "Visible menus"
msgstr "Видимые меню"

#: config.py:338
msgid "Edit the keyboard shortcuts associated with this plugin"
msgstr "Редактирование сочетаний клавиш, связанных с этим плагином"

#: config.py:342
msgid "&View library preferences"
msgstr "&Просмотр настроек библиотеки"

#: config.py:343
msgid "View data stored in the library database for this plugin"
msgstr ""
"Просмотр данных, хранящихся в базе данных библиотеки для этого плагина"

#: dialogs.py:40
msgid "Checking"
msgstr "Проверка"

#: dialogs.py:42
msgid "Cancel"
msgstr "Отмена"

#: dialogs.py:62
msgid "%s %d %s  (%d matches)..."
msgstr "%s %d %s  (%d совпадений)..."

#: dialogs.py:124
msgid "Cover Search Options"
msgstr "Опции поиска обложек"

#: dialogs.py:127
msgid "Search library for books where"
msgstr "Найти в библиотеке книги, где"

#: dialogs.py:131
msgid "Cover file size is"
msgstr "Размер файла обложки"

#: dialogs.py:141
msgid "Cover dimensions are"
msgstr "Размеры обложки"

#: dialogs.py:149
msgid "width"
msgstr "ширина"

#: dialogs.py:154
msgid "height"
msgstr "высота"

#: dialogs.py:156
msgid "No cover"
msgstr "Нет обложки"

#: dialogs.py:217
msgid "View log"
msgstr "Просмотр журнала"

#: dialogs.py:224
msgid "Quality Check log"
msgstr "Лог проверки качества"

#: dialogs.py:266
msgid "quality check plugin:exclude add dialog"
msgstr "quality check plugin:exclude add dialog"

#: dialogs.py:275
msgid "Quality Check Add Exclusions"
msgstr "Проверка качества Добавить исключения"

#: dialogs.py:278
msgid "Exclude Books"
msgstr "Исключение книг"

#: dialogs.py:282
msgid "Exclude selected books(s) from the following Quality Check:"
msgstr "Исключить выбранные книги из следующей проверки качества:"

#: dialogs.py:386
msgid "quality check plugin:exclude view dialog"
msgstr "quality check plugin:exclude view dialog"

#: dialogs.py:389
msgid "Quality Check View Exclusions"
msgstr "Проверка качества Исключения отображения"

#: dialogs.py:393
msgid "View Excluded Books"
msgstr "Просмотр исключенных книг"

#: dialogs.py:412
msgid "Remove selected books from the exclusions"
msgstr "Удалить выбранные книги из исключений"

#: dialogs.py:471
msgid "quality check plugin:search epub dialog"
msgstr "quality check plugin:search epub dialog"

#: dialogs.py:503
msgid "Find expression"
msgstr "Выражение поиска"

#: dialogs.py:517
msgid "Clear search history"
msgstr "Очистить историю поиска"

#: dialogs.py:522
msgid "&Ignore case"
msgstr "&Игнорировать регистр"

#: dialogs.py:524
msgid "&Show all occurrences"
msgstr "&Показать все вхождения"

#: dialogs.py:525
msgid ""
"If unchecked, the search of each ePub is stopped as soon as the first match is found.\n"
"If checked, all occurrences will be displayed in the log but it will run much slower."
msgstr ""
"Если не отмечено, поиск каждого ePub прекращается после нахождения первого совпадения.\n"
"Если отмечено, все вхождения будут отображаться в журнале, но это замедляет работу."

#: dialogs.py:530
msgid "Scope"
msgstr "Область"

#: dialogs.py:535
msgid "&HTML content"
msgstr "&Содержимое HTML"

#: dialogs.py:536
msgid ""
"Search all html content files, including any html tags.\n"
"If you also ticked the Plain text content option, this option is ignored."
msgstr ""
"Искать во всех файлах содержащих html, включая любые html теги.\n"
"Если вы также отметили параметр \"Обычный текст\", этот параметр игнорируется."

#: dialogs.py:538
msgid "&CSS/xpgt stylesheets"
msgstr "&Таблицы стилей CSS/xpgt"

#: dialogs.py:539
msgid "Search all css or Adobe .xpgt stylesheets"
msgstr "Искать во всех таблицах стилей css или Adobe .xpgt"

#: dialogs.py:540
msgid "&Plain text content"
msgstr "Т&екстовое содержимое"

#: dialogs.py:541
msgid ""
"Search body text of html files with all html tags stripped.\n"
"If you also ticked the HTML content option, that is ignored in favour of this."
msgstr ""
"Искать body текст html-файлов со всеми вырезанными html-тегами.\n"
"Если вы также отметили параметр HTML-контент, он будет проигнорирован в пользу этого."

#: dialogs.py:543
msgid "&OPF manifest"
msgstr "&Манифест OPF"

#: dialogs.py:544
msgid "Search the .opf manifest file"
msgstr "Искать файл манифеста .opf"

#: dialogs.py:545
msgid "&NCX TOC"
msgstr "О&главление NCX"

#: dialogs.py:546
msgid "Search the NCX table of contents file"
msgstr "Искать в файле NCX (таблице содержания)"

#: dialogs.py:547
msgid "&Zip filenames"
msgstr "&Имена файлов в Zip"

#: dialogs.py:548
msgid "Search the filenames inside the ePub (zip) file"
msgstr "Искать имена файлов внутри файла ePub (zip)"

#: dialogs.py:565
msgid "No find text"
msgstr "Нет текста для поиска"

#: dialogs.py:566
msgid "You must specify a regular expression to search for."
msgstr "Вы должны указать регулярное выражение для поиска."

#: dialogs.py:575
msgid "No search scope"
msgstr "Не указана область поиска"

#: dialogs.py:576
msgid "You must specify a scope for the ePub search."
msgstr "Необходимо указать область поиска ePub."

#: dialogs.py:633
msgid "Fixing"
msgstr "Исправление"

#: dialogs.py:646
msgid "Fix completed"
msgstr "Исправление завершено"

#: mobi6.py:86
msgid "This is an Amazon Topaz book. It cannot be processed."
msgstr "Это книга формата Amazon Topaz. Ее нельзя обработать."

#: mobi6.py:94
msgid "Unknown book type: %s"
msgstr "Неизвестный тип книги: %s"

#: mobi6.py:134
msgid "Setting ASIN only supported for MOBI files of type 'BOOK'."
msgstr "Установка ASIN поддерживается только для файлов MOBI типа 'BOOK'."

#: mobi6.py:159
msgid "No existing EXTH record. Cannot update ASIN."
msgstr "Отсутствует запись EXTH. Невозможно обновить ASIN."
